"""
Django settings for simpleecommerce project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


def path_join(*args):
    return os.path.join(*args).replace('\\', '/')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!h%(6c4#ozl@btfdq-d^^3*dsv=re42x3ge$vhi^cad3z+_2wv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'treebeard',
    'rest_framework',
    'users',
    'products',
    'utils',
    'orders',
    'ckeditor',
    'ckeditor_uploader',
    'cms',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'simpleecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utils.context_processors.global_values',
            ],
        },
    },
]

WSGI_APPLICATION = 'simpleecommerce.wsgi.application'
AUTH_USER_MODEL = 'users.UserProfile'

STATICFILES_DIRS = (
    path_join(BASE_DIR, "static"),
)
STATIC_URL = '/static/'
FILE_STORAGE = 'utils.local_storage.MyLocalStorage'
UPLOAD_ROOT = path_join(BASE_DIR, "upload")
UPLOAD_URL = '/upload/'
CKEDITOR_UPLOAD_PATH = "upload/"

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/tmp/bakerleo.log',
        },
        'file_err': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': '/tmp/bakerleo_err.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file_err'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
}
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'
# CKEDITOR_JQUERY_URL = '/static/js/jquery.min.js'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': 900,
        'allowedContent': True
    },
}

# EMAIL_USE_TLS = True
# EMAIL_HOST = ''
# EMAIL_PORT = '587'
# EMAIL_HOST_USER = ''
# EMAIL_HOST_PASSWORD = ''
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = '../../app-messages'

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

TTFONTS = {
    'arial': path_join(BASE_DIR, 'utils/fonts/arial.ttf'),
    'comic sans ms': path_join(BASE_DIR, 'utils/fonts/ComicSansMSRegular.ttf'),
    'courier new': path_join(BASE_DIR, 'utils/fonts/CourierNewRegular.ttf'),
    'tahoma': path_join(BASE_DIR, 'utils/fonts/Tahoma.ttf'),
    'Times New Roman': path_join(BASE_DIR, 'utils/fonts/Times_New_Roman_Normal.ttf'),
    'verdana': path_join(BASE_DIR, 'utils/fonts/Verdana.ttf'),
}

CUSTOM_CAKE_PRICE = Decimal('2.00')
USER_IMAGE_RESTRICTIONS = {'min_width': 128, 'min_height': 128, 'max_width': 1024, 'max_height': 1024}
ORDER_RECEIVERS = ['staff1@example.com']

try:
    from .local_settings import *  # noqa
except ImportError:
    pass
else:
    try:
        apply_globals(globals())
    except NameError:
        pass
try:
    from .live_settings import *  # noqa
except ImportError:
    pass
else:
    try:
        live_apply_globals(globals())
    except NameError:
        pass
